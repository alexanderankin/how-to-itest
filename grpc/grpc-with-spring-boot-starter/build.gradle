plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom compileOnly
    testAnnotationProcessor.extendsFrom annotationProcessor
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

/*
configurations.configureEach {
    if (it.name.equals('implementation')) return
    it.extendsFrom(configurations.implementation)
}
*/

dependencies {
    // implementation platform('org.springframework.boot:spring-boot-dependencies:3.4.0')
    // annotationProcessor platform('org.springframework.boot:spring-boot-dependencies:3.4.0')
    // protobuf platform('org.springframework.grpc:spring-grpc-dependencies:0.3.0-SNAPSHOT')
    // and others...

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.grpc:grpc-services'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'

    // runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.grpc:spring-grpc-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.fasterxml.uuid:java-uuid-generator:4.3.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.3.0-SNAPSHOT'
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }

    plugins {
        grpc {
            // noinspection GroovyAssignabilityCheck
            artifact = 'io.grpc:protoc-gen-grpc-java'
        }
    }

    generateProtoTasks {
        all().each {
            it.plugins {
                grpc {
                    // noinspection GroovyAssignabilityCheck
                    option 'jakarta_omit'
                    // noinspection GroovyAssignabilityCheck
                    option '@generated=omit'
                }
            }
        }
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
